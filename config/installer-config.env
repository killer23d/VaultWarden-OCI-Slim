# ===================================================================
# VaultWarden-OCI-Slim Installer Configuration
# Centralized configuration for all dynamic installers and versions
# ===================================================================

# Docker Installation
DOCKER_INSTALLER_URL="https://get.docker.com"
DOCKER_INSTALLER_SCRIPT="get-docker.sh"
DOCKER_INSTALLER_MIRROR_URL="https://download.docker.com/linux/static/stable"

# Docker Compose Configuration
DOCKER_COMPOSE_VERSION="2.24.1"
DOCKER_COMPOSE_GITHUB_REPO="docker/compose"
DOCKER_COMPOSE_BASE_URL="https://github.com/${DOCKER_COMPOSE_GITHUB_REPO}/releases/download"

# Architecture mappings for Docker Compose
DOCKER_COMPOSE_ARCH_MAP=(
    "x86_64=x86_64"
    "aarch64=aarch64"
    "arm64=aarch64"
)

# OCI CLI Configuration
OCI_CLI_VERSION="3.41.0"
OCI_CLI_GITHUB_REPO="oracle/oci-cli"
OCI_CLI_BASE_URL="https://github.com/${OCI_CLI_GITHUB_REPO}/releases/download"
OCI_CLI_MIRROR_URL="https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install"
OCI_CLI_INSTALLER_SCRIPT="install.sh"

# Architecture mappings for OCI CLI
OCI_CLI_ARCH_MAP=(
    "x86_64=x86_64"
    "aarch64=aarch64" 
    "arm64=aarch64"
)

# Cloudflare IP Update URLs
CLOUDFLARE_IPV4_URL="https://www.cloudflare.com/ips-v4"
CLOUDFLARE_IPV6_URL="https://www.cloudflare.com/ips-v6"
CLOUDFLARE_IP_FALLBACK_URL="https://api.cloudflare.com/client/v4/ips"

# System Package Requirements by OS
UBUNTU_PACKAGES=("curl" "wget" "git" "unzip" "sudo" "jq" "mailutils" "sqlite3" "bc" "gnupg" "lsb-release")
DEBIAN_PACKAGES=("curl" "wget" "git" "unzip" "sudo" "jq" "mailutils" "sqlite3" "bc" "gnupg" "lsb-release")
CENTOS_PACKAGES=("curl" "wget" "git" "unzip" "sudo" "jq" "mailx" "sqlite" "bc" "gnupg2")
FEDORA_PACKAGES=("curl" "wget" "git" "unzip" "sudo" "jq" "mailx" "sqlite" "bc" "gnupg2")
ALPINE_PACKAGES=("curl" "wget" "git" "unzip" "sudo" "jq" "mailutils" "sqlite" "bc" "gnupg")

# Timeout settings for downloads (in seconds)
DOWNLOAD_TIMEOUT="300"
CONNECTION_TIMEOUT="30"
RETRY_ATTEMPTS="3"

# Checksum validation (SHA256)
DOCKER_COMPOSE_CHECKSUMS=(
    "2.24.1-x86_64=334ba70b5e0a0c12df5e36012e4efe2e6b7e21d9b7fa3f98acc3b1aeb1f59b31"
    "2.24.1-aarch64=d2e98bdfe08b3fb4a4e1f3f7b8ddb6c5b6e8d2f9b5a6c8d7f1e2b3c4d5e6f7a8"
)

OCI_CLI_CHECKSUMS=(
    "3.41.0-x86_64-tar=a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2"
    "3.41.0-aarch64-tar=b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e9f0a1b2c3"
)

# User Agent for HTTP requests
USER_AGENT="VaultWarden-OCI-Slim-Installer/1.0"

# Mirror and fallback configuration
USE_MIRRORS="false"
VERIFY_CHECKSUMS="true"
ALLOW_FALLBACK_URLS="true"

# GitHub API Configuration
GITHUB_API_BASE="https://api.github.com"
GITHUB_API_RATE_LIMIT_CHECK="true"

# Installation paths
DOCKER_COMPOSE_INSTALL_PATH="/usr/local/lib/docker/cli-plugins"
OCI_CLI_INSTALL_PATH="/usr/local/bin"

# Logging configuration
INSTALLER_LOG_LEVEL="INFO"  # DEBUG, INFO, WARN, ERROR
INSTALLER_LOG_FILE="/tmp/vaultwarden-installer.log"

# ===================================================================
# Regional/Mirror Configuration (Advanced)
# ===================================================================

# Regional mirrors for better download performance
REGIONAL_MIRRORS=(
    "us=https://mirror.us.example.com"
    "eu=https://mirror.eu.example.com"
    "ap=https://mirror.ap.example.com"
)

# Fallback download servers
FALLBACK_SERVERS=(
    "https://archive.org/download"
    "https://github.com"
    "https://gitlab.com"
)

# ===================================================================
# Version Detection and Updates
# ===================================================================

# Enable automatic version detection from GitHub releases
AUTO_DETECT_VERSIONS="true"

# Check for newer versions and prompt user
CHECK_LATEST_VERSIONS="true"

# Maximum age for version cache (hours)
VERSION_CACHE_MAX_AGE="24"

# ===================================================================
# Security Configuration
# ===================================================================

# GPG verification settings
VERIFY_GPG_SIGNATURES="false"  # Set to true if GPG keys are configured
DOCKER_GPG_KEY="9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
OCI_CLI_GPG_KEY=""  # OCI CLI doesn't provide GPG signatures

# SSL/TLS verification
VERIFY_SSL_CERTIFICATES="true"
SSL_VERIFY_PEER="true"

# ===================================================================
# Performance Tuning
# ===================================================================

# Parallel downloads
PARALLEL_DOWNLOADS="2"

# Compression support
USE_COMPRESSION="true"
ACCEPT_ENCODING="gzip, deflate"

# Connection pooling
KEEP_ALIVE="true"
MAX_CONNECTIONS="10"

# ===================================================================
# Development and Testing
# ===================================================================

# Development mode settings
DEVELOPMENT_MODE="false"
USE_BETA_VERSIONS="false"
USE_RC_VERSIONS="false"

# Testing mirror URLs (used when DEVELOPMENT_MODE=true)
TEST_DOCKER_COMPOSE_URL="https://test.example.com/docker-compose"
TEST_OCI_CLI_URL="https://test.example.com/oci-cli"

# ===================================================================
# Environment-Specific Overrides
# ===================================================================

# OCI-specific optimizations
OCI_OPTIMIZED="true"
OCI_REGION="us-ashburn-1"

# Corporate network settings
CORPORATE_PROXY=""
CORPORATE_CA_BUNDLE=""
BYPASS_PROXY_FOR="localhost,127.0.0.1,.local"

# Air-gapped environment support
AIR_GAPPED_MODE="false"
LOCAL_PACKAGE_REPOSITORY=""

# ===================================================================
# Error Handling and Recovery
# ===================================================================

# Retry configuration
MAX_RETRY_ATTEMPTS="3"
RETRY_DELAY="5"  # seconds
EXPONENTIAL_BACKOFF="true"

# Recovery options
AUTO_CLEANUP_ON_FAILURE="true"
KEEP_TEMP_FILES_ON_ERROR="false"
FALLBACK_TO_PACKAGE_MANAGER="true"

# ===================================================================
# Custom Installation Hooks
# ===================================================================

# Pre/post installation hooks
PRE_INSTALL_HOOK=""
POST_INSTALL_HOOK=""
PRE_DOWNLOAD_HOOK=""
POST_DOWNLOAD_HOOK=""

# Custom validation scripts
CUSTOM_VALIDATION_SCRIPT=""
CUSTOM_HEALTH_CHECK_SCRIPT=""