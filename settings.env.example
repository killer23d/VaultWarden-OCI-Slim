# ===========================================
# VAULTWARDEN-OCI CONFIGURATION
# Optimized for Ubuntu 22.04 LTS with 6GB RAM
# SQLite Database with OCI Vault Integration
# ===========================================

# === DOMAIN & SECURITY CONFIGURATION ===
DOMAIN_NAME=example.com
APP_DOMAIN=vault.example.com
DOMAIN=https://vault.example.com

# System user configuration (1000 for app containers, 999 for system services)  
PUID=1000
PGID=1000
TZ=America/Los_Angeles

# === OCI VAULT INTEGRATION (RECOMMENDED) ===
# For production deployments, use OCI Vault to securely manage secrets  
# Set this to your OCI Vault secret OCID to enable automatic secret retrieval
OCI_SECRET_OCID=

# OCI Configuration (automatically detected if using OCI compute instance)
# These are typically auto-configured when running on OCI
# OCI_CONFIG_FILE=~/.oci/config
# OCI_CONFIG_PROFILE=DEFAULT
# OCI_CLI_AUTH=instance_principal  # Use instance principal for OCI compute instances

# OCI Vault Examples for different regions:
# US East (Ashburn): ocid1.vaultsecret.oc1.iad.amaaaaaav3k...
# US West (Phoenix): ocid1.vaultsecret.oc1.phx.amaaaaaav3k...
# EU (Frankfurt): ocid1.vaultsecret.oc1.eu-frankfurt-1.amaaaaaav3k...
# UK South (London): ocid1.vaultsecret.oc1.uk-london-1.amaaaaaav3k...

# === PROFILE MANAGEMENT (BEST PRACTICE) ===
# Control which optional services are enabled
ENABLE_BACKUP=true                # Enable automated database backups
ENABLE_SECURITY=true              # Enable fail2ban intrusion protection
ENABLE_DNS=false                  # Enable dynamic DNS updates
ENABLE_MAINTENANCE=true           # Enable watchtower updates
ENABLE_MONITORING=false           # Enable monitoring stack (future)
ENABLE_DEVELOPMENT=false          # Enable development tools (future)

# === VAULTWARDEN APPLICATION ===
# Generate with: openssl rand -base64 32
ADMIN_TOKEN=generate-with-openssl-rand-base64-32
SIGNUPS_ALLOWED=false
INVITES_ALLOWED=true
WEB_VAULT_ENABLED=true
SHOW_PASSWORD_HINTS=false
DISABLE_2FA_REMEMBER=false
EXTENDED_LOGGING=true
LOG_LEVEL=warn

# === SQLITE DATABASE CONFIGURATION ===
# SQLite is automatically configured - no manual setup required!
# The startup.sh script handles all database initialization
DATABASE_URL=sqlite:////data/bwdata/db.sqlite3
ROCKET_WORKERS=1
WEBSOCKET_ENABLED=false

# Manual SQLite Database Setup (if needed):
# The following steps are automatically handled by startup.sh:
# 1. Database file is created at: ./data/bwdata/db.sqlite3
# 2. VaultWarden automatically initializes the schema on first run
# 3. WAL mode is enabled for better concurrent performance
# 4. Optimal PRAGMA settings are applied for OCI A1 Flex
#
# Manual database creation (rarely needed):
# mkdir -p ./data/bwdata
# sqlite3 ./data/bwdata/db.sqlite3 "PRAGMA journal_mode=WAL; PRAGMA synchronous=NORMAL; PRAGMA cache_size=10000; PRAGMA temp_store=memory;"

# === SMTP CONFIGURATION ===
SMTP_HOST=smtp.mailersend.net
SMTP_PORT=587
SMTP_SECURITY=starttls
SMTP_USERNAME=your-smtp-username-or-token
SMTP_PASSWORD=your-smtp-password-or-token
SMTP_FROM=vault@example.com
SMTP_FROM_NAME=Vaultwarden Server

# Popular SMTP Provider Examples:
# Gmail: smtp.gmail.com:587 (use app password)
# Outlook: smtp-mail.outlook.com:587
# MailerSend: smtp.mailersend.net:587
# SendGrid: smtp.sendgrid.net:587
# Amazon SES: email-smtp.us-east-1.amazonaws.com:587

# === PUSH NOTIFICATIONS (OPTIONAL) ===
PUSH_ENABLED=true
# Obtain from https://bitwarden.com/host/
PUSH_INSTALLATION_ID=obtain-from-bitwarden-hosting-portal
PUSH_INSTALLATION_KEY=obtain-from-bitwarden-hosting-portal
PUSH_RELAY_URI=https://push.bitwarden.com

# === BACKUP CONFIGURATION (ENHANCED) ===
# Generate with: openssl rand -base64 32
BACKUP_PASSPHRASE=generate-with-openssl-rand-base64-32
BACKUP_REMOTE=your-rclone-remote-name
BACKUP_PATH=vaultwarden-backups
BACKUP_RETENTION_DAYS=30
BACKUP_EMAIL=backup@example.com
BACKUP_SCHEDULE=0 2 * * *          # Daily at 2 AM
BACKUP_COMPRESS=true               # Compress backups
BACKUP_ENCRYPT=true                # Encrypt backups with GPG
BACKUP_VERIFICATION=true
BACKUP_VERIFICATION_SCHEDULE='30 3 * * 0'  # Sunday 3:30 AM

# === NOTIFICATION CONTROL (ENHANCED) ===
BACKUP_NOTIFY=true                 # Enable/disable backup notifications
BACKUP_NOTIFY_ON=all              # all|success|failure - when to send notifications
SEND_EMAIL_NOTIFICATION=true      # Enable DR test notifications

# === RCLONE CONFIGURATION ===
RCLONE_CONFIG_DIR=./backup/config  # Directory for rclone configuration
RCLONE_TRANSFER_TIMEOUT=30m        # Transfer timeout
RCLONE_RETRIES=3                   # Number of retries on failure

# === CADDY REVERSE PROXY ===
ADMIN_EMAIL=admin@example.com

# === CLOUDFLARE INTEGRATION ===
# For sites using Cloudflare proxy (recommended for production)
# Cloudflare automatically provides DDoS protection and caching
CLOUDFLARE_ENABLED=true            # Enable Cloudflare-specific optimizations
CLOUDFLARE_ZONE_ID=your-zone-id    # Optional: for advanced API operations
CF_API_TOKEN=your-cloudflare-api-token  # For dynamic DNS and API operations

# Cloudflare SSL/TLS Settings (configure in Cloudflare dashboard):
# - SSL/TLS encryption mode: Full (strict) recommended
# - Edge Certificates: Universal SSL enabled
# - Origin Server Certificates: Generate origin certificate for enhanced security
# - Authenticated Origin Pulls: Enable for additional security

# === DYNAMIC DNS (DDCLIENT) ===
# Enable if your server IP changes (not needed for static OCI instances)
DDCLIENT_PROTOCOL=cloudflare
DDCLIENT_LOGIN=your-cloudflare-email
DDCLIENT_PASSWORD=your-cloudflare-api-token
DDCLIENT_ZONE=example.com
DDCLIENT_HOST=vault.example.com

# === FAIL2BAN SECURITY ===
FAIL2BAN_DEST=security@example.com
FAIL2BAN_BANTIME=1h                # Ban duration
FAIL2BAN_FINDTIME=10m              # Time window for violations
FAIL2BAN_MAXRETRY=5                # Max attempts before ban

# Cloudflare-specific fail2ban settings (automatically configured)
# The system automatically downloads and updates Cloudflare IP ranges
# for proper IP detection behind Cloudflare proxy

# === WATCHTOWER AUTO-UPDATES ===
WATCHTOWER_SCHEDULE=0 0 3 * * 0    # Sunday 3 AM (weekly)
WATCHTOWER_NOTIFICATIONS=true      # Enable update notifications

# === MONITORING & ALERTS ===
DISK_ALERT_THRESHOLD=85            # Disk usage alert threshold (%)
ALERT_EMAIL=admin@example.com      # Alert destination email
CPU_ALERT_THRESHOLD=80             # CPU usage alert threshold (%)
MEMORY_ALERT_THRESHOLD=85          # Memory usage alert threshold (%)
LOAD_ALERT_THRESHOLD=2.0           # Load average alert threshold

# SQLite-specific monitoring thresholds
SQLITE_SIZE_ALERT_MB=500           # Alert if database exceeds size (MB)
WAL_SIZE_ALERT_MB=50               # Alert if WAL file exceeds size (MB)
FRAGMENTATION_ALERT_RATIO=1.5      # Alert if fragmentation ratio exceeds

# Log management
LOG_RETENTION_DAYS=30
MAX_LOG_SIZE=100M

# === DEVELOPMENT & DEBUGGING ===
DEBUG_MODE=false                   # Enable debug logging
VERBOSE_LOGGING=false              # Enable verbose container logs
PERFORMANCE_MONITORING=false      # Enable performance metrics collection

# === OCI VAULT SECRET EXAMPLES ===
# When using OCI Vault, store these sensitive values as secrets:
# 
# Secret Name: vaultwarden-config
# Secret Content (JSON format):
# {
#   "ADMIN_TOKEN": "your-generated-admin-token",
#   "BACKUP_PASSPHRASE": "your-generated-backup-passphrase",
#   "SMTP_USERNAME": "your-smtp-username",
#   "SMTP_PASSWORD": "your-smtp-password",
#   "CF_API_TOKEN": "your-cloudflare-api-token",
#   "PUSH_INSTALLATION_ID": "your-push-id",
#   "PUSH_INSTALLATION_KEY": "your-push-key"
# }
#
# The oci-setup.sh script will automatically retrieve and apply these secrets
# Usage: ./oci-setup.sh get

# ===========================================
# CONTAINER CONFIGURATION
# (Internal variables - do not modify)
# ===========================================

# Standardized container names for scripts
VAULTWARDEN_CONTAINER=vaultwarden
CADDY_CONTAINER=bw_caddy
FAIL2BAN_CONTAINER=bw_fail2ban
BACKUP_CONTAINER=bw_backup
WATCHTOWER_CONTAINER=bw_watchtower
DDCLIENT_CONTAINER=bw_ddclient

# SQLite Database Paths (standardized across all scripts)
SQLITE_DB_PATH=./data/bwdata/db.sqlite3
SQLITE_DB_CONTAINER_PATH=/data/bwdata/db.sqlite3
VAULTWARDEN_DATA_DIR=./data/bwdata
VAULTWARDEN_DATA_CONTAINER_DIR=/data/bwdata

# Resource optimization for OCI A1 Flex (1 OCPU/6GB):
# These are automatically applied by docker-compose.yml:
# - VaultWarden: 0.35 CPU limit, 256MB memory limit
# - Caddy: 0.12 CPU limit, 128MB memory limit  
# - Backup: 0.30 CPU limit, 128MB memory limit
# - Fail2ban: 0.08 CPU limit, 64MB memory limit
# - Watchtower: 0.10 CPU limit, 64MB memory limit
# - DDClient: 0.05 CPU limit, 32MB memory limit
# Total: 1.00 CPU, 672MB memory (within 6GB limit)
