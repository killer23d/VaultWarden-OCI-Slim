# ===========================================
# VAULTWARDEN-OCI CONFIGURATION
# Optimized for Ubuntu 22.04 LTS with 6GB RAM
# SQLite Database with OCI Vault Integration
# SINGLE SOURCE OF TRUTH - All variables defined here
# ===========================================

# === REQUIRED CORE CONFIGURATION ===
# These MUST be set for the stack to function

# Domain & Security (REQUIRED)
# The full domain for your Vaultwarden instance (e.g., vault.example.com)
# DO NOT include https:// - it will be added automatically in docker-compose.yml
VAULTWARDEN_DOMAIN=vault.example.com
ADMIN_EMAIL=admin@example.com

# VaultWarden Admin (REQUIRED - generate with: openssl rand -base64 32)
ADMIN_TOKEN=generate-with-openssl-rand-base64-32

# System Configuration (REQUIRED)
PUID=1000
PGID=1000
TZ=America/Los_Angeles

# === DATABASE CONFIGURATION ===
# BEST PRACTICE: Single source of truth for database URL
# SQLite is automatically configured - no manual setup required!
DATABASE_URL=sqlite:////data/bwdata/db.sqlite3
ROCKET_WORKERS=1 # DO NOT CHANGE UNLESS NEEDED
WEBSOCKET_ENABLED=false

# Database paths (standardized across all scripts)
SQLITE_DB_PATH=./data/bwdata/db.sqlite3
SQLITE_DB_CONTAINER_PATH=/data/bwdata/db.sqlite3
VAULTWARDEN_DATA_DIR=./data/bwdata
VAULTWARDEN_DATA_CONTAINER_DIR=/data/bwdata

# === PROFILE MANAGEMENT ===
# Control which optional services are enabled
# Services are only started if properly configured
ENABLE_BACKUP=true                # Requires: BACKUP_REMOTE, BACKUP_PASSPHRASE, rclone.conf
ENABLE_SECURITY=true              # Requires: No additional config (uses defaults)
ENABLE_DNS=false                  # Requires: DDCLIENT_HOST, DDCLIENT_PASSWORD
ENABLE_MAINTENANCE=true           # Requires: No additional config (uses defaults)
ENABLE_MONITORING=false           # Requires: ALERT_EMAIL or WEBHOOK_URL

# === OCI VAULT INTEGRATION (RECOMMENDED) ===
# For production deployments, use OCI Vault to securely manage secrets
OCI_SECRET_OCID=

# OCI Configuration examples:
# US East (Ashburn): ocid1.vaultsecret.oc1.iad.amaaaaaav3k...
# US West (Phoenix): ocid1.vaultsecret.oc1.phx.amaaaaaav3k...
# EU (Frankfurt): ocid1.vaultsecret.oc1.eu-frankfurt-1.amaaaaaav3k...

# === VAULTWARDEN APPLICATION SETTINGS ===
SIGNUPS_ALLOWED=false
INVITES_ALLOWED=true
WEB_VAULT_ENABLED=true
SHOW_PASSWORD_HINTS=false
DISABLE_2FA_REMEMBER=false
EXTENDED_LOGGING=true
LOG_LEVEL=warn

# === SMTP CONFIGURATION (OPTIONAL) ===
# Required for: Email notifications, password resets, user invitations
# Leave empty to disable email features
SMTP_HOST=
SMTP_PORT=587
SMTP_SECURITY=starttls
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM=
SMTP_FROM_NAME=Vaultwarden Server

# Popular SMTP Provider Examples:
# Gmail: smtp.gmail.com:587 (use app password)
# Outlook: smtp-mail.outlook.com:587
# MailerSend: smtp.mailersend.net:587
# SendGrid: smtp.sendgrid.net:587
# Amazon SES: email-smtp.us-east-1.amazonaws.com:587

# === PUSH NOTIFICATIONS (OPTIONAL) ===
# Obtain credentials from https://bitwarden.com/host/
PUSH_ENABLED=true
PUSH_INSTALLATION_ID=
PUSH_INSTALLATION_KEY=
PUSH_RELAY_URI=https://push.bitwarden.com

# === BACKUP CONFIGURATION ===
# BEST PRACTICE: Only configured if ENABLE_BACKUP=true
# All backup variables are validated before service starts

# Required for backups (generate with: openssl rand -base64 32)
BACKUP_PASSPHRASE=
BACKUP_REMOTE=
BACKUP_PATH=vaultwarden-backups

# Backup settings
BACKUP_RETENTION_DAYS=30
BACKUP_EMAIL=
BACKUP_SCHEDULE=0 2 * * *          # Daily at 2 AM
BACKUP_COMPRESS=true               # Compress backups
BACKUP_ENCRYPT=true                # Encrypt backups with GPG
BACKUP_VERIFICATION=true
BACKUP_VERIFICATION_SCHEDULE=30 3 * * 0  # Sunday 3:30 AM

# Backup notifications
BACKUP_NOTIFY=true                 # Enable/disable backup notifications
BACKUP_NOTIFY_ON=all              # all|success|failure - when to send notifications

# rclone Configuration
RCLONE_CONFIG_DIR=./backup/config  # Directory for rclone configuration
RCLONE_TRANSFER_TIMEOUT=30m        # Transfer timeout
RCLONE_RETRIES=3                   # Number of retries on failure

# === DYNAMIC DNS CONFIGURATION ===
# BEST PRACTICE: Only configured if ENABLE_DNS=true
# Required variables are validated before service starts
DDCLIENT_PROTOCOL=
DDCLIENT_LOGIN=
DDCLIENT_PASSWORD=
DDCLIENT_ZONE=
DDCLIENT_HOST=

# === CLOUDFLARE INTEGRATION ===
# For sites using Cloudflare proxy (recommended for production)
CLOUDFLARE_ENABLED=true            # Enable Cloudflare-specific optimizations
CLOUDFLARE_ZONE_ID=                # Optional: for advanced API operations
CF_API_TOKEN=                      # For dynamic DNS and API operations

# === SECURITY CONFIGURATION ===
# Used by fail2ban service (ENABLE_SECURITY=true)
FAIL2BAN_DEST=security@example.com
FAIL2BAN_BANTIME=1h                # Ban duration
FAIL2BAN_FINDTIME=10m              # Time window for violations
FAIL2BAN_MAXRETRY=5                # Max attempts before ban

# === AUTO-UPDATE CONFIGURATION ===
# Used by watchtower service (ENABLE_MAINTENANCE=true)
WATCHTOWER_SCHEDULE=0 0 3 * * 0    # Sunday 3 AM (weekly)
WATCHTOWER_NOTIFICATIONS=false     # Enable update notifications via email

# === MONITORING & ALERTS CONFIGURATION ===
# INTEGRATED INTO DOCKER COMPOSE - These variables are now connected!
# BEST PRACTICE: Only used when ENABLE_MONITORING=true
# Requires at least one alert destination (ALERT_EMAIL or WEBHOOK_URL)

# Alert destinations (at least one required for monitoring)
ALERT_EMAIL=                       # Email for alerts (requires SMTP config)
WEBHOOK_URL=                       # Webhook URL for alerts (alternative to email)

# System monitoring thresholds (integrated into monitoring service)
DISK_ALERT_THRESHOLD=85            # Disk usage alert threshold (%)
CPU_ALERT_THRESHOLD=80             # CPU usage alert threshold (%)
MEMORY_ALERT_THRESHOLD=85          # Memory usage alert threshold (%)
LOAD_ALERT_THRESHOLD=2.0           # Load average alert threshold

# SQLite-specific monitoring thresholds (FIXED VALUES)
SQLITE_SIZE_ALERT_MB=100           # Alert if database exceeds size (MB)
WAL_SIZE_ALERT_MB=10               # Alert if WAL file exceeds size (MB)
FRAGMENTATION_ALERT_RATIO=1.2      # Alert if fragmentation ratio exceeds (FIXED)
FRAGMENTATION_CRITICAL_RATIO=1.5   # Critical if fragmentation ratio exceeds (FIXED)
FREELIST_ALERT_THRESHOLD=15        # Alert if free list exceeds threshold (%)

# Log management
LOG_RETENTION_DAYS=30

# === DEVELOPMENT & DEBUGGING ===
DEBUG_MODE=false                   # Enable debug logging
VERBOSE_LOGGING=false              # Enable verbose container logs
PERFORMANCE_MONITORING=false       # Enable performance metrics collection

# ===========================================
# VALIDATION NOTES
# ===========================================
#
# The startup.sh script validates all configuration before starting services:
#
# Core Services (always required):
# - VAULTWARDEN_DOMAIN, ADMIN_TOKEN, ADMIN_EMAIL must be set
# - DATABASE_URL is set to SQLite path
# - Domain is automatically constructed as: https://${VAULTWARDEN_DOMAIN}
#
# Optional Services (validated if enabled):
# - Backup: Requires BACKUP_REMOTE, BACKUP_PASSPHRASE, and valid rclone.conf
# - DNS: Requires DDCLIENT_HOST and DDCLIENT_PASSWORD
# - Monitoring: Requires ALERT_EMAIL or WEBHOOK_URL
# - Security: No additional requirements (uses defaults)
# - Maintenance: No additional requirements (uses defaults)
#
# Services with missing required configuration are automatically disabled
# with clear error messages indicating what needs to be configured.
#
# ✅ ALL monitoring variables are now INTEGRATED into Docker Compose
# ✅ NO MORE disconnected variables - everything has a purpose
# ✅ FAIL-FAST validation prevents silent failures
# ✅ DOMAIN CONSOLIDATION: Single VAULTWARDEN_DOMAIN source of truth
# ✅ FRAGMENTATION THRESHOLDS: Fixed 1.2 → 1.5 progression
